import os

def get_file_signature(file_path, num_bytes=8):
    with open(file_path, 'rb') as f:
        return f.read(num_bytes)

def list_masqueraded_files(folder_path):
    # Define file signatures for file types
    file_signatures = {
        b'\x89\x50\x4E\x47\x0D\x0A\x1A\x0A': '.png',
        b'\xFF\xD8\xFF\xE0\x00\x10\x4A\x46': '.jpg',
        b'\x47\x49\x46\x38\x37\x61': '.gif',

    }


    for root, dirs, files in os.walk(folder_path):
        for file in files:
            file_path = os.path.join(root, file)

            # Gets the file's signature
            file_signature = get_file_signature(file_path)

            # Gets the file's extension from their name
            _, file_extension = os.path.splitext(file)

            # Check if the file signature matches the expected signature for its extension
            expected_signature = file_signatures.get(file_extension.lower(), None)
            if expected_signature and file_signature[:len(expected_signature)] != expected_signature:
                print(f"Masqueraded File: {file_path}")

if __name__ == "__main__":
    folder_path = input("Enter the folder path: ")
    list_masqueraded_files(folder_path)
